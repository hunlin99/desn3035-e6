# .github/workflows/convert-to-pdf.yml

name: Docs to PDF
# This workflow is triggered on pushes to the repository.
on:
  push:
    branches:
      - main


jobs:
  converttopdf:
    name: Build PDF
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: baileyjm02/markdown-to-pdf@v1
        with:
          input_dir: docs
          output_dir: pdfs
          images_dir: docs/images
          # for example <img src="./images/file-name.png">
          image_import: ./images
          # Default is true, can set to false to only get PDF files
          build_html: false
      - uses: actions/upload-artifact@v3
        with:
          name: docs
          path: pdfs

 create-release:
    name: Create Release and Upload Artifact
    runs-on: ubuntu-latest
    needs: converttopdf
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 1: Create a new release with a randomly generated tag name
      - name: Create a new release
        id: create_release
        run: |
          TAG_NAME=$(date +'%Y%m%d%H%M%S')-${RANDOM}
          echo "Release tag: $TAG_NAME"
          
          # Create the release using the GitHub API
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"tag_name\": \"$TAG_NAME\", \"name\": \"$TAG_NAME\", \"draft\": false, \"prerelease\": false}" \
            https://api.github.com/repos/${{ github.repository }}/releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Download the artifact called "docs" from the previous job
      - name: Download docs artifact
        uses: actions/download-artifact@v3
        with:
          name: docs

      # Step 3: List the downloaded files recursively
      - name: List downloaded files
        run: |
          echo "Listing files in the 'docs' artifact:"
          find .

      # Step 4: Upload the artifact to the release
      - name: Upload artifact to the release
        run: |
          TAG_NAME=$(date +'%Y%m%d%H%M%S')-${RANDOM}
          echo "Uploading artifact to release with tag: $TAG_NAME"
          
          # Upload the docs artifact to the release
          RELEASE_ID=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME | jq .id)

          # Upload the artifact
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -F "file=@docs" \
            https://uploads.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets?name=docs.zip